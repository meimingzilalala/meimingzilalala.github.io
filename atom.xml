<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>江湖</title>
  
  <subtitle>有人的地方就有江湖</subtitle>
  <link href="https://wsw8.online/atom.xml" rel="self"/>
  
  <link href="https://wsw8.online/"/>
  <updated>2021-05-10T08:27:03.124Z</updated>
  <id>https://wsw8.online/</id>
  
  <author>
    <name>汪道之</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>系统结构第三章_流水线</title>
    <link href="https://wsw8.online/archives/ef24c61a.html"/>
    <id>https://wsw8.online/archives/ef24c61a.html</id>
    <published>2021-05-03T08:22:30.000Z</published>
    <updated>2021-05-10T08:27:03.124Z</updated>
    
    <content type="html"><![CDATA[<h2 id="流水线的基本概念"><a class="markdownIt-Anchor" href="#流水线的基本概念"></a> 流水线的基本概念</h2><h3 id="1-什么是流水线"><a class="markdownIt-Anchor" href="#1-什么是流水线"></a> 1. 什么是流水线</h3><p>定义：流水线是利用执行指令操作之间的并行性，实现多条指令重叠执行的技术</p><h4 id="11-术语"><a class="markdownIt-Anchor" href="#11-术语"></a> 1.1 术语</h4><p>流水段（流水级）：完成一条指令的一部分操作</p><p>机器周期（流水线周期）：指令沿流水线移动一个流水段的时间。长度取决于最慢的流水段，一般是一个时钟周期（有时是两个时钟周期）。每个流水线周期从指令流水线流出一条指令</p><p>吞吐量：单位时间从流水线流出的指令数</p><span id="more"></span><p>流水线设计者：平衡每个流水段的时间，使之等长。因此，每条指令在流水线的平均执行时间在理想情况下为：非流水线机器平均指令执行时间/流水线机器段数</p><p>流水线加速比：非流水线机器平均指令执行时间/流水线机器平均指令执行时间</p><p>理想情况：流水线加速比=流水线机器段数</p><h4 id="12-特点"><a class="markdownIt-Anchor" href="#12-特点"></a> 1.2 特点</h4><ol><li>类似自动装配线</li><li>有多个段（级），段间有<strong>流水线寄存器</strong></li><li>每个流水段执行指令或操作的<strong>不同部分</strong></li><li>流水段之间采用<strong>同步时钟控制</strong></li><li>流水线是开发串行指令流中<strong>并行性</strong>的一种实现技术</li></ol><h3 id="2-risc指令系统的特点"><a class="markdownIt-Anchor" href="#2-risc指令系统的特点"></a> 2. RISC指令系统的特点</h3><ol><li>所有参加运算的数据来自<strong>寄存器</strong>，结果也写入<strong>寄存器</strong>，寄存器为32/64位</li><li>访存只有<code>load</code>和<code>store</code>指令</li><li>指令的类型较少，所有指令<strong>长度相同</strong></li><li>不同指令执行的时钟周期数差别不大</li></ol><h3 id="3-非流水线方式下risc指令系统的实现"><a class="markdownIt-Anchor" href="#3-非流水线方式下risc指令系统的实现"></a> 3. 非流水线方式下RISC指令系统的实现</h3><h4 id="31-多周期cpu实现"><a class="markdownIt-Anchor" href="#31-多周期cpu实现"></a> 3.1 多周期CPU实现</h4><p>假定指令系统是MIPS的一个定点子集：load/store指令，ALU指令，转移指令</p><p>一条指令的执行过程最多需要5个时钟周期：CPI=5</p><p>图示：</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504195556778.png" alt="image-20210504195556778" /></p><p>电路图示：</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504195639490.png" alt="image-20210504195639490" /></p><p>上图分析：</p><ol><li><p>IF：Instruction fetch cycle</p><blockquote><ol><li>按照PC内容访问指令存储器，取出指令</li><li>PC+4→NPC，以获取下一条指令地址</li></ol></blockquote></li><li><p>ID：Instruction decode/register fetch cycle</p><blockquote><ol><li>指令译码</li><li>读寄存器</li><li>如果需要，则符号扩展指令中的位移量</li></ol></blockquote></li><li><p>EX：Execution（执行）/effective address cycle</p><blockquote><ul><li>Load/Store：计算数据存储器有效地址</li><li>R-R/R-I ALU：执行运算操作</li><li>Branch：做“=0？”测试，并置条件，计算目标地址</li></ul></blockquote></li><li><p>MEM：Memory access</p><blockquote><ul><li>Load：送有效地址到数据存储器，取数据</li><li>Store：写ID，读出数据到有效地址单元中</li><li>Branch：如果条件满足计算目标地址送PC；否则NPC送PC</li></ul></blockquote></li><li><p>WB：Write-back cycle</p><blockquote><ul><li>Load or ALU：写结果到寄存器堆</li></ul></blockquote></li></ol><h4 id="32-多周期实现的改进"><a class="markdownIt-Anchor" href="#32-多周期实现的改进"></a> 3.2 多周期实现的改进</h4><ol><li>对于Branch，将“=0？”测试和计算可能的转移目标地址提前到ID</li><li>完成ALU指令在MEM cycle</li></ol><p>图示：</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504201717892.png" alt="image-20210504201717892" /></p><ol start="3"><li><p>改进硬件冗余</p><blockquote><ol><li>ALU可以共享</li><li>数据和指令存储器可以合并</li></ol></blockquote></li></ol><h3 id="4-经典5段流水线risc处理器"><a class="markdownIt-Anchor" href="#4-经典5段流水线risc处理器"></a> 4. 经典5段流水线RISC处理器</h3><h4 id="41-特点"><a class="markdownIt-Anchor" href="#41-特点"></a> 4.1 特点</h4><ol><li>5个段构成一个指令流水线，一条指令经过每个段</li><li>CPI减小到1，因为平均每个时钟周期发射或完成一条指令</li><li>在任意时钟周期，在每个流水段正执行一条指令的部分</li><li>理想情况下，性能提升5倍</li></ol><p>图示：</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504202456375.png" alt="image-20210504202456375" /></p><h4 id="42-实现"><a class="markdownIt-Anchor" href="#42-实现"></a> 4.2 实现</h4><p>为了实现，在每两段之间新增流水线寄存器，其作用：</p><ol><li>在本周期提供流水段中指令操作的数据及控制信息</li><li>周期结束时，存指令操作结果供下一个流水段指令使用</li></ol><p>如下图蓝色部分：</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504203103762.png" alt="image-20210504203103762" /></p><h4 id="43-对比"><a class="markdownIt-Anchor" href="#43-对比"></a> 4.3 对比</h4><ol><li><p>对比单周期实现，流水线减少了时钟周期长度</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504203333003.png" alt="image-20210504203333003" /></p></li><li><p>对比多周期实现，流水线减少了CPI</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504203357254.png" alt="image-20210504203357254" /></p></li></ol><h4 id="44-问题"><a class="markdownIt-Anchor" href="#44-问题"></a> 4.4 问题</h4><h5 id="441-存储器访问冲突"><a class="markdownIt-Anchor" href="#441-存储器访问冲突"></a> 4.4.1 存储器访问冲突</h5><p>结构冒险（structure hazard）：在同一时钟周期不同操作使用同一数据通路资源</p><p>图示：</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504203832540.png" alt="image-20210504203832540" /></p><p>解决：使用分开的指令cache和数据cache</p><p>图示：</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504204140731.png" alt="image-20210504204140731" /></p><p>注意：如果时钟周期不变，流水线存储系统的带宽<strong>必须是非流水线的5倍</strong></p><h5 id="442-寄存器冲突"><a class="markdownIt-Anchor" href="#442-寄存器冲突"></a> 4.4.2 寄存器冲突</h5><p>图示：</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504204333445.png" alt="image-20210504204333445" /></p><p>解决：重新设计寄存器堆资源</p><ol><li><p>允许在一个时钟周期WB段先写，ID段后读</p><blockquote><p>每个时钟周期完成2个读和一个写</p><p>需要提供两个读端口和一个写端口</p><p>当写和读同一个寄存器会发生数据冒险（Data hazard）</p></blockquote></li></ol><h5 id="443-更新pc时冲突"><a class="markdownIt-Anchor" href="#443-更新pc时冲突"></a> 4.4.3 更新PC时冲突</h5><p>每个时钟周期必须增量PC并存储到PC</p><p>遇到转移指令时可能会改变PC的值，可能会产生控制冒险（Control hazard）</p><h3 id="5-流水线的基本性能"><a class="markdownIt-Anchor" href="#5-流水线的基本性能"></a> 5. 流水线的基本性能</h3><ol><li>增大了吞吐量（单位时间完成指令条数）</li><li>每一条指令的执行时间没有加快</li><li>延迟：附加的控制增加了开销</li><li>不平衡：流水线各段时间以最慢的为准</li><li>附加开销：流水线寄存器</li><li>流水线冒险：串行机器不会产生冒险</li><li>填充和排空：会减小加速比</li></ol><h2 id="流水线的主要障碍-流水线冒险相关"><a class="markdownIt-Anchor" href="#流水线的主要障碍-流水线冒险相关"></a> 流水线的主要障碍-流水线冒险（相关）</h2><h3 id="1-冒险分类与有停顿流水线性能"><a class="markdownIt-Anchor" href="#1-冒险分类与有停顿流水线性能"></a> 1. 冒险分类与有停顿流水线性能</h3><h4 id="11-冒险分类"><a class="markdownIt-Anchor" href="#11-冒险分类"></a> 1.1 冒险分类：</h4><ol><li>结构冒险：指令重叠执行时，发生硬件资源冲突</li><li>数据冒险：几条指令重叠执行时，后面指令依赖前面指令的结果却没有准备好（没有计算或存储）</li><li>控制冒险：发生在流水线执行转移指令时，在进入ID段时，转移条件和转移目标地址不能按时提供给IF段取下一条指令</li></ol><p>冒险出现时：避免流水线上有冒险的指令执行下一个流水段</p><p>冒险总是可以用停顿（流水线气泡/气泡）解决：停顿时，其后的所有指令被停顿，指令之前的指令继续执行，没有新的指令被取到流水线</p><p>图示：</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504211313154.png" alt="image-20210504211313154" /></p><h4 id="12-有停顿的流水线性能"><a class="markdownIt-Anchor" href="#12-有停顿的流水线性能"></a> 1.2 有停顿的流水线性能</h4><p>加速比公式：</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504211507892.png" alt="image-20210504211507892" /></p><p>流水线CPI=理想CPI（≈1）+平均每条指令的停顿周期数</p><p>忽略流水线时钟周期的额外开销，并假设流水段是平衡的，则：非流水线时钟周期=流水线时钟周期</p><p>最终得：</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504212021602.png" alt="image-20210504212021602" /></p><h3 id="2-结构冒险流水段竞争"><a class="markdownIt-Anchor" href="#2-结构冒险流水段竞争"></a> 2. 结构冒险：流水段竞争</h3><h4 id="21-定义"><a class="markdownIt-Anchor" href="#21-定义"></a> 2.1 定义</h4><p>发生在同一时钟周期，2条或多条指令想要使用同一硬件资源</p><h4 id="22-出现情况"><a class="markdownIt-Anchor" href="#22-出现情况"></a> 2.2 出现情况</h4><ol><li>多重访问寄存器堆</li><li>多重访问存储器</li><li>没有或没有充分流水功能部件</li></ol><h4 id="23-解决"><a class="markdownIt-Anchor" href="#23-解决"></a> 2.3 解决</h4><ol><li><p>寄存器堆的多重访问</p><blockquote><p>图示：</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504213234617.png" alt="image-20210504213234617" /></p><p>方法1.：简单插入一个停顿，将降低加速比</p><p>方法2：在一个时钟周期WB段先写，ID段后读</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504213429124.png" alt="image-20210504213429124" /></p></blockquote></li><li><p>多重访问单端口存储器</p><blockquote><p>图示：</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504213646077.png" alt="image-20210504213646077" /></p><p>方法1：插入停顿</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504213806538.png" alt="image-20210504213806538" /></p><p>方法2：提供另一个存储器端口</p><p>方法3：分开指令存储器和数据存储器</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504213843051.png" alt="image-20210504213843051" /></p><p>方法4：使用指令缓冲器</p></blockquote></li><li><p>没有完全流水化的功能部件</p><blockquote><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210504214056065.png" alt="image-20210504214056065" /></p></blockquote></li></ol><h4 id="24-认识"><a class="markdownIt-Anchor" href="#24-认识"></a> 2.4 认识</h4><p>结构冒险是被允许的，为了<strong>减少成本、减少部件延迟</strong></p><h3 id="3-数据冒险"><a class="markdownIt-Anchor" href="#3-数据冒险"></a> 3. 数据冒险</h3><h4 id="31-定义"><a class="markdownIt-Anchor" href="#31-定义"></a> 3.1 定义</h4><p>由于流水线上指令重叠执行，改变了原来串行执行的读/写操作数顺序，使得后面依赖前面指令结果的指令得不到准备好的数据</p><h4 id="32-解决"><a class="markdownIt-Anchor" href="#32-解决"></a> 3.2 解决</h4><p>不要让指令在数据冒险时重叠执行</p><h4 id="33-实施"><a class="markdownIt-Anchor" href="#33-实施"></a> 3.3 实施</h4><p>流水线停顿</p><p>软件：</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210505153243028.png" alt="image-20210505153243028" /></p><p>硬件：</p><blockquote><p>增加硬件互锁（Interlock）</p><blockquote><p>增加额外硬件检测需要停顿的情况</p><p>增加额外硬件放“气泡”（暂停）到流水线</p></blockquote><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210505153751740.png" alt="image-20210505153751740" /></p></blockquote><h4 id="34-forwarding前推-直通-转发-相关数据通路"><a class="markdownIt-Anchor" href="#34-forwarding前推-直通-转发-相关数据通路"></a> 3.4 Forwarding（前推、直通、转发、相关数据通路）</h4><p>有数据冒险指令需要的结果可能已经计算出来，存放在流水线寄存器中，所以我们可以在数据通路中增加数据线（buses）传送这些结果，这些buses总是从后面的流水段连接到前面的流水段</p><p>图示：</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210505154733078.png" alt="image-20210505154733078" /></p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210505155325030.png" alt="image-20210505155325030" /></p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210505155531924.png" alt="image-20210505155531924" /></p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210505155617247.png" alt="image-20210505155617247" /></p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210505155645091.png" alt="image-20210505155645091" /></p><p>没有Forwarding和有Forwarding的比较：</p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210505155812070.png" alt="image-20210505155812070" /></p><p><img src="/images/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%B5%81%E6%B0%B4%E7%BA%BF/image-20210505155823248.png" alt="image-20210505155823248" /></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;流水线的基本概念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#流水线的基本概念&quot;&gt;&lt;/a&gt; 流水线的基本概念&lt;/h2&gt;
&lt;h3 id=&quot;1-什么是流水线&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-什么是流水线&quot;&gt;&lt;/a&gt; 1. 什么是流水线&lt;/h3&gt;
&lt;p&gt;定义：流水线是利用执行指令操作之间的并行性，实现多条指令重叠执行的技术&lt;/p&gt;
&lt;h4 id=&quot;11-术语&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#11-术语&quot;&gt;&lt;/a&gt; 1.1 术语&lt;/h4&gt;
&lt;p&gt;流水段（流水级）：完成一条指令的一部分操作&lt;/p&gt;
&lt;p&gt;机器周期（流水线周期）：指令沿流水线移动一个流水段的时间。长度取决于最慢的流水段，一般是一个时钟周期（有时是两个时钟周期）。每个流水线周期从指令流水线流出一条指令&lt;/p&gt;
&lt;p&gt;吞吐量：单位时间从流水线流出的指令数&lt;/p&gt;</summary>
    
    
    
    <category term="系统结构" scheme="https://wsw8.online/categories/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="课程" scheme="https://wsw8.online/tags/%E8%AF%BE%E7%A8%8B/"/>
    
    <category term="系统结构" scheme="https://wsw8.online/tags/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/"/>
    
    <category term="计算机" scheme="https://wsw8.online/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>wsl的安装与配置</title>
    <link href="https://wsw8.online/archives/cee22f12.html"/>
    <id>https://wsw8.online/archives/cee22f12.html</id>
    <published>2021-05-02T03:34:04.000Z</published>
    <updated>2021-05-10T08:12:27.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>之前上过一个Linux的选修课，了解了Linux系统的一些知识，越用越觉得一些需要命令行的软件用Linux来简直太方便了，这篇文章就介绍以下如何在windows系统上搭建Linux子系统（也就是wsl）（Windows Subsystem for Linux），这样就不用使用VMware来装虚拟机了</p><span id="more"></span><h2 id="windows-10-开启wsl功能"><a class="markdownIt-Anchor" href="#windows-10-开启wsl功能"></a> windows 10 开启wsl功能</h2><ol><li>按Windows+Q进入搜索功能，也可以右键点击开始，选择里面的搜索功能</li><li>在Windows 10的搜索框中输入<code>启用或关闭Windows功能</code></li><li>打开后选中<code>适用于Linux的Windows子系统</code><br /><img src="/images/wsl%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20210503170452634.png" alt="image-20210503170452634" /></li></ol><h2 id="linux的安装"><a class="markdownIt-Anchor" href="#linux的安装"></a> Linux的安装</h2><ol><li>打开微软商店（Microsoft Store）</li><li>搜索Linux</li><li>选择其中的一个发行版本进行安装，本文以debian为例</li></ol><p><img src="/images/wsl%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20210503171000458.png" alt="image-20210503171000458" /></p><p><img src="/images/wsl%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20210503171035452.png" alt="image-20210503171035452" /></p><h2 id="linux初始化"><a class="markdownIt-Anchor" href="#linux初始化"></a> Linux初始化</h2><ol><li><p>打开刚下好的Linux，等一小会它的安装</p></li><li><p>输入新创建的用户名</p></li><li><p>输入该用户的密码，输入两次后就进入了Linux系统，新用户也创建完成</p></li><li><p>输入<code>sudo passwd</code>更改root的密码</p></li><li><p>一些知识</p><blockquote><p>输入<code>su</code>再输入密码进入root模式<br />输入<code>exit</code>或者按<code>ctrl+d</code>退出root模式<br />输入<code>sudo 命令</code>可以在普通用户下执行root权限的命令，密码是普通用户的密码</p></blockquote></li></ol><h2 id="terminal安装"><a class="markdownIt-Anchor" href="#terminal安装"></a> Terminal安装</h2><p>Terminal是一款高颜值的管理命令行软件，如果你习惯于PowerShell或者cmd的话可以跳过此步骤</p><ol><li>打开微软商店（MicroSoft Store）</li><li>搜索Terminal</li><li>点击安装</li></ol><h2 id="terminal配置"><a class="markdownIt-Anchor" href="#terminal配置"></a> Terminal配置</h2><p>简单配置一下Terminal，让你用起来更舒服，可跳过</p><ol><li>打开Terminal</li><li>打开设置</li></ol><p><img src="/images/wsl%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/image-20210503171852186.png" alt="image-20210503171852186" /></p><ol start="3"><li>点击左下角的设置图标，进入Terminal的配置文件，如下，<strong>为了安全起见建议备份一下，不然出问题不好还原</strong></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// This file was initially generated by Windows Terminal 1.4.3243.0</span></span><br><span class="line"><span class="comment">// It should still be usable in newer versions, but newer versions might have additional</span></span><br><span class="line"><span class="comment">// settings, help text, or changes that you will not see unless you clear this file</span></span><br><span class="line"><span class="comment">// and let us generate a new one for you.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// To view the default settings, hold &quot;alt&quot; while clicking on the &quot;Settings&quot; button.</span></span><br><span class="line"><span class="comment">// For documentation on these settings, see: https://aka.ms/terminal-documentation</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;$schema&quot;</span>: <span class="string">&quot;https://aka.ms/terminal-profiles-schema&quot;</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">&quot;defaultProfile&quot;</span>: <span class="string">&quot;&#123;58ad8b0c-3ef8-5f4d-bc6f-13e4c00f2530&#125;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;initialRows&quot;</span>: <span class="number">25</span>,</span><br><span class="line">  <span class="attr">&quot;initialCols&quot;</span>: <span class="number">90</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// You can add more global application settings here.</span></span><br><span class="line">  <span class="comment">// To learn more about global settings, visit https://aka.ms/terminal-global-settings</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// If enabled, selections are automatically copied to your clipboard.</span></span><br><span class="line">  <span class="attr">&quot;copyOnSelect&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If enabled, formatted data is also copied to your clipboard</span></span><br><span class="line">  <span class="attr">&quot;copyFormatting&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// A profile specifies a command to execute paired with information about how it should look and feel.</span></span><br><span class="line">  <span class="comment">// Each one of them will appear in the &#x27;New Tab&#x27; dropdown,</span></span><br><span class="line">  <span class="comment">//   and can be invoked from the commandline with `wt.exe -p xxx`</span></span><br><span class="line">  <span class="comment">// To learn more about profiles, visit https://aka.ms/terminal-profile-settings</span></span><br><span class="line">  <span class="attr">&quot;profiles&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;defaults&quot;</span>: &#123;</span><br><span class="line">      <span class="comment">// Put settings here that you want to apply to all profiles.</span></span><br><span class="line">      <span class="attr">&quot;hidden&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">&quot;acrylicOpacity&quot;</span>: <span class="number">0.75</span>,</span><br><span class="line">      <span class="attr">&quot;useAcrylic&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">&quot;colorScheme&quot;</span>: <span class="string">&quot;Campbell&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;fontFace&quot;</span>: <span class="string">&quot;Consolas&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;fontSize&quot;</span>: <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;cursorColor&quot;</span>: <span class="string">&quot;#00FF00&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;cursorHeight&quot;</span>: <span class="number">25</span>,</span><br><span class="line">      <span class="attr">&quot;cursorShape&quot;</span>: <span class="string">&quot;vintage&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;snapOnInput&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">&quot;padding&quot;</span>: <span class="string">&quot;0, 0, 0, 0&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;closeOnExit&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;list&quot;</span>: [</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;58ad8b0c-3ef8-5f4d-bc6f-13e4c00f2530&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;hidden&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Debian&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;source&quot;</span>: <span class="string">&quot;Windows.Terminal.Wsl&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;startingDirectory&quot;</span>: <span class="string">&quot;//wsl$/Debian/home/tom/&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// Make changes here to the cmd.exe profile.</span></span><br><span class="line">        <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;0caa0dad-35be-5f56-a8ff-afceeeaa6101&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Command Prompt&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;commandline&quot;</span>: <span class="string">&quot;cmd.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;hidden&quot;</span>: <span class="literal">true</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;b453ae62-4e3d-5e58-b989-0a998ec441b8&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;hidden&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Azure Cloud Shell&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;source&quot;</span>: <span class="string">&quot;Windows.Terminal.Azure&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// Make changes here to the powershell.exe profile.</span></span><br><span class="line">        <span class="attr">&quot;guid&quot;</span>: <span class="string">&quot;&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Windows PowerShell&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;commandline&quot;</span>: <span class="string">&quot;powershell.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;hidden&quot;</span>: <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Add custom color schemes to this array.</span></span><br><span class="line">  <span class="comment">// To learn more about color schemes, visit https://aka.ms/terminal-color-schemes</span></span><br><span class="line">  <span class="attr">&quot;schemes&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Campbell&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;foreground&quot;</span>: <span class="string">&quot;#A7B191&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;background&quot;</span>: <span class="string">&quot;#0C0C0C&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;colors&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;#0C0C0C&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#C50F1F&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#13A10E&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#C19C00&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#0037DA&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#881798&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#3A96DD&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#CCCCCC&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#767676&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#E74856&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#16C60C&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#F9F1A5&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#3B78FF&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#B4009E&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#61D6D6&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#F2F2F2&quot;</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Solarized Dark&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;foreground&quot;</span>: <span class="string">&quot;#FDF6E3&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;background&quot;</span>: <span class="string">&quot;#073642&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;colors&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;#073642&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#D30102&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#859900&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#B58900&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#268BD2&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#D33682&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#2AA198&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#EEE8D5&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#002B36&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#CB4B16&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#586E75&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#657B83&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#839496&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#6C71C4&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#93A1A1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#FDF6E3&quot;</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Solarized Light&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;foreground&quot;</span>: <span class="string">&quot;#073642&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;background&quot;</span>: <span class="string">&quot;#FDF6E3&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;colors&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;#073642&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#D30102&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#859900&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#B58900&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#268BD2&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#D33682&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#2AA198&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#EEE8D5&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#002B36&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#CB4B16&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#586E75&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#657B83&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#839496&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#6C71C4&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#93A1A1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;#FDF6E3&quot;</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Add custom actions and keybindings to this array.</span></span><br><span class="line">  <span class="comment">// To unbind a key combination from your defaults.json, set the command to &quot;unbound&quot;.</span></span><br><span class="line">  <span class="comment">// To learn more about actions and keybindings, visit https://aka.ms/terminal-keybindings</span></span><br><span class="line">  <span class="attr">&quot;actions&quot;</span>: [</span><br><span class="line">    <span class="comment">// Copy and paste are bound to Ctrl+Shift+C and Ctrl+Shift+V in your defaults.json.</span></span><br><span class="line">    <span class="comment">// These two lines additionally bind them to Ctrl+C and Ctrl+V.</span></span><br><span class="line">    <span class="comment">// To learn more about selection, visit https://aka.ms/terminal-selection</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;action&quot;</span>: <span class="string">&quot;copy&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;singleLine&quot;</span>: <span class="literal">false</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;keys&quot;</span>: <span class="string">&quot;ctrl+c&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;paste&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;keys&quot;</span>: <span class="string">&quot;ctrl+v&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Press Ctrl+Shift+F to open the search box</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;find&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;keys&quot;</span>: <span class="string">&quot;ctrl+shift+f&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Press Alt+Shift+D to open a new pane.</span></span><br><span class="line">    <span class="comment">// - &quot;split&quot;: &quot;auto&quot; makes this pane open in the direction that provides the most surface area.</span></span><br><span class="line">    <span class="comment">// - &quot;splitMode&quot;: &quot;duplicate&quot; makes the new pane use the focused pane&#x27;s profile.</span></span><br><span class="line">    <span class="comment">// To learn more about panes, visit https://aka.ms/terminal-panes</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;action&quot;</span>: <span class="string">&quot;splitPane&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;split&quot;</span>: <span class="string">&quot;auto&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;splitMode&quot;</span>: <span class="string">&quot;duplicate&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;keys&quot;</span>: <span class="string">&quot;alt+shift+d&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>更改配置的几个地方（不要直接复制粘贴，一些值不同）<ul><li>更改<code>defaultProfile</code>，后面的值就粘贴<code>list</code>里面的几个项的<code>guid</code>，这是默认启动打开哪个命令行，我设置的是Debian的</li><li><code>initialRows</code>和<code>initialCols</code>设置打开后初始宽高</li><li><code>profiles</code>中的<code>defaults</code>是全局设置，可以对照更改。<code>list</code>里面就是Terminal管理的几个命令行软件，有刚装的debian，cmd，Powershell等</li><li>我在<code>list</code>里<code>Debian</code>的设置中加了<code>&quot;startingDirectory&quot;:&quot;//wsl$/Debian/home/tom/&quot;</code>，这是默认打开Debian后的目录，tom是我的用户名，大家可以改成自己的</li><li><code>schemes</code>中的配置是主题的一些配置，大家可以直接复制粘贴过去添加上</li><li><code>actions</code>中是快捷键的配置，大家自行参考</li></ul></li></ol><p>恭喜，至此Terminal配置完毕，我用的也是老师给的配置，觉得挺简约还挺好看的，一些其他更花里胡哨的配置请自行网上冲浪</p><h2 id="配置wsl"><a class="markdownIt-Anchor" href="#配置wsl"></a> 配置wsl</h2><p>言归正传，接下来我们可以使用terminal打开debian，可以在那个加号后面的向下的小箭头里面选择打开的命令行</p><h3 id="换源"><a class="markdownIt-Anchor" href="#换源"></a> 换源</h3><p>因为debian使用apt作为包管理器，而apt的默认服务器在国外，网速很慢，我们可以换到国内的镜像源来</p><ol><li><p>使用<code>su</code>切换到root权限</p></li><li><p>输入<code>cd /etc/apt</code>切换到对应目录</p></li><li><p>输入<code>cp /etc/apt/sources.list /etc/apt/sources.list_backup</code>备份一下源文件，出错的话便于还原</p></li><li><p>输入<code>nano sources.list</code>利用nano打开<code>sources.list</code>文件</p><blockquote><p>如果你会使用其他文本编辑器也是一样的<br />实在不会用的话也可以用记事本，wsl的根目录在windows的<code>C:\Users\Admin\AppData\Local\Packages\TheDebianProject.DebianGNULinux_76v4gfsz19hv4\LocalState\rootfs</code>下，其中用户名和装的Linux有出入，大家对照自己的就行<br />用记事本打开并做下面更改，保存即可</p></blockquote></li><li><p>删除所有内容，将以下内容复制粘贴进去**(命令行中复制和粘贴都是右键)**</p><p>debian源：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 中科大源</span><br><span class="line">deb http:<span class="comment">//mirrors.ustc.edu.cn/debian stable main contrib non-free</span></span><br><span class="line"><span class="meta"># deb-src http:<span class="comment">//mirrors.ustc.edu.cn/debian stable main contrib non-free</span></span></span><br><span class="line">deb http:<span class="comment">//mirrors.ustc.edu.cn/debian stable-updates main contrib non-free</span></span><br><span class="line"><span class="meta"># deb-src http:<span class="comment">//mirrors.ustc.edu.cn/debian stable-updates main contrib non-free</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta"># deb http:<span class="comment">//mirrors.ustc.edu.cn/debian stable-proposed-updates main contrib non-free</span></span></span><br><span class="line"><span class="meta"># deb-src http:<span class="comment">//mirrors.ustc.edu.cn/debian stable-proposed-updates main contrib non-free</span></span></span><br></pre></td></tr></table></figure><p>Ubuntu源：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#  阿里源</span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br></pre></td></tr></table></figure></li><li><p><code>ctrl+x</code>退出，输入<code>y</code>再点<code>enter</code>确定修改</p></li><li><p>换源完成</p></li></ol><h2 id="更新包"><a class="markdownIt-Anchor" href="#更新包"></a> 更新包</h2><ol><li><code>sudo apt update</code>会将新的包下载下来</li><li><code>sudo apt upgrade</code>会升级为最新的包，两条命令顺序不要反了</li><li>以后安装软件就可以<code>sudo apt install 软件名</code>了，嘻嘻，快捷方便</li></ol><h2 id="完成"><a class="markdownIt-Anchor" href="#完成"></a> 完成</h2><p>恭喜你，你的wsl已经搞定啦，享受Linux带来的快乐吧！</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;之前上过一个Linux的选修课，了解了Linux系统的一些知识，越用越觉得一些需要命令行的软件用Linux来简直太方便了，这篇文章就介绍以下如何在windows系统上搭建Linux子系统（也就是wsl）（Windows Subsystem for Linux），这样就不用使用VMware来装虚拟机了&lt;/p&gt;</summary>
    
    
    
    <category term="wsl" scheme="https://wsw8.online/categories/wsl/"/>
    
    
    <category term="自学" scheme="https://wsw8.online/tags/%E8%87%AA%E5%AD%A6/"/>
    
    <category term="Linux" scheme="https://wsw8.online/tags/Linux/"/>
    
    <category term="wsl" scheme="https://wsw8.online/tags/wsl/"/>
    
  </entry>
  
  <entry>
    <title>编译原理第六章</title>
    <link href="https://wsw8.online/archives/e997863b.html"/>
    <id>https://wsw8.online/archives/e997863b.html</id>
    <published>2021-04-29T00:33:04.000Z</published>
    <updated>2021-05-02T03:25:30.977Z</updated>
    
    <content type="html"><![CDATA[<h1 id="编译原理第六章-词法分析"><a class="markdownIt-Anchor" href="#编译原理第六章-词法分析"></a> 编译原理第六章-词法分析</h1><p>词法分析：编译程序对源程序进行分析和目标程序合成，最终生成目标程序</p><p>预处理子程序（预处理器）功能：</p><ol><li>删除编辑用字符，如制表符、换页符等</li><li>删除注释</li><li>合并多个空白字符为单个空白字符</li><li>组合多个独立文件中的源程序</li><li>展开宏定义</li><li>条件编译的选择等</li></ol><span id="more"></span><blockquote><p>其中，2、3等也可以在词法分析的同时进行</p></blockquote><h2 id="1-词法分析概述"><a class="markdownIt-Anchor" href="#1-词法分析概述"></a> 1. 词法分析概述</h2><p>扫描源程序的字符串，按照词法规则，识别出单词符号作为输出；对识别过程发现的词法错误（非法的字符、不正确的常量、程序括号等）进行处理</p><p>词法分析器只执行一次：</p><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E5%85%AD%E7%AB%A0/image-20210429084145085.png" alt="image-20210429084145085" /></p><p>词法分析器执行多次：</p><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E5%85%AD%E7%AB%A0/image-20210429084219353.png" alt="image-20210429084219353" /></p><h2 id="2-词法分析器的输出形式"><a class="markdownIt-Anchor" href="#2-词法分析器的输出形式"></a> 2. 词法分析器的输出形式</h2><h3 id="21-单词的种类"><a class="markdownIt-Anchor" href="#21-单词的种类"></a> 2.1 单词的种类</h3><ol><li>标识符：用来命名程序中的实体，如类型、变量、函数、过程、标号等</li><li>基本字（关键字）：如if、while等</li><li>常量：各种类型的常量</li><li>运算符：如+、-、*、/等</li><li>（分）界符：如；、{、}等</li></ol><p>eg：</p><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E5%85%AD%E7%AB%A0/image-20210429084743808.png" alt="image-20210429084743808" /></p><blockquote><p>留意最后的换行符‘\n’也是界符</p></blockquote><h3 id="22-单词的输出形式"><a class="markdownIt-Anchor" href="#22-单词的输出形式"></a> 2.2 单词的输出形式</h3><p>使用二元式表示：</p><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E5%85%AD%E7%AB%A0/image-20210429084945101.png" alt="image-20210429084945101" /></p><h2 id="3-单词类别的划分"><a class="markdownIt-Anchor" href="#3-单词类别的划分"></a> 3. 单词类别的划分</h2><h3 id="31-单词的编码随类别不同而不同"><a class="markdownIt-Anchor" href="#31-单词的编码随类别不同而不同"></a> 3.1 单词的编码随类别不同而不同</h3><ol><li><strong>基本字、运算符、界符</strong>的数目是确定的，每个单词与它的类别码为一一对应的关系，即<strong>一字一码</strong>，故而它们的第二元可以空缺</li><li><strong>标识符</strong>通归一类</li><li><strong>常量</strong>可按整型、实型、字符型、布尔型等分类</li></ol><p>eg：</p><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E5%85%AD%E7%AB%A0/image-20210429085538808.png" alt="image-20210429085538808" /></p><blockquote><p>通常用常数在常量表（标识符在符号表）中的位置（编号）作为它们的属性值</p></blockquote><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E5%85%AD%E7%AB%A0/image-20210429085737912.png" alt="image-20210429085737912" /></p><h3 id="32-单词的识别方法"><a class="markdownIt-Anchor" href="#32-单词的识别方法"></a> 3.2 单词的识别方法</h3><ol><li><p>标识符和关键字的识别</p><blockquote><p>需要<strong>超前搜索</strong>（多读一个字符以确认上一个结束）</p><p>读到 非 字母数字停止</p></blockquote></li><li><p>常数的识别</p><blockquote><p>部分常量需要超前搜索</p></blockquote></li><li><p>运算符的识别</p><blockquote><p>1个或多个符号构成</p><p>需要超前搜索</p></blockquote></li><li><p>界符的识别</p><blockquote><p>不需要超前搜索</p></blockquote></li></ol><h2 id="4-状态转换图"><a class="markdownIt-Anchor" href="#4-状态转换图"></a> 4. 状态转换图</h2><p>状态转换图是设计词法分析器的有效工具</p><p>状态图特点：</p><ol><li>有限的有向图</li><li>有向边上标记字符</li><li>唯一初态</li><li>若干终态（至少一个）</li></ol><p>图示：</p><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E5%85%AD%E7%AB%A0/image-20210429090825221.png" alt="image-20210429090825221" /></p><p>eg：</p><p>识别标识符和数字串的状态转换图：</p><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E5%85%AD%E7%AB%A0/image-20210429091210263.png" alt="image-20210429091210263" /></p><p>它的流程图：</p><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E5%85%AD%E7%AB%A0/image-20210429091340527.png" alt="image-20210429091340527" /></p><h2 id="5-词法分析器的设计"><a class="markdownIt-Anchor" href="#5-词法分析器的设计"></a> 5. 词法分析器的设计</h2><h3 id="51-单词符号"><a class="markdownIt-Anchor" href="#51-单词符号"></a> 5.1 单词符号</h3><p>标识符：begin、end、integer、if、then、else、function、read、write</p><p>无符号整型常量</p><p>运算符：-、*、&lt;、&lt;=、&lt;&gt;、=、&gt;、&gt;=、:=</p><p>分界符：；、（、）、</p><h3 id="52-状态转换图"><a class="markdownIt-Anchor" href="#52-状态转换图"></a> 5.2 状态转换图</h3><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E5%85%AD%E7%AB%A0/image-20210429091724175.png" alt="image-20210429091724175" /></p><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E5%85%AD%E7%AB%A0/image-20210429091752010.png" alt="image-20210429091752010" /></p><blockquote><p>注意：有*标记的状态需要回退一个字符</p></blockquote><h3 id="53-一个示意算法"><a class="markdownIt-Anchor" href="#53-一个示意算法"></a> 5.3 一个示意算法</h3><p>以下是将会用到的变量、函数和过程</p><ol><li><p>cha</p><blockquote><p>字符变量，存放最新读入的字符</p></blockquote></li><li><p>token</p><blockquote><p>字符数组，存放已读入的字符序列</p></blockquote></li><li><p>getchar（）</p><blockquote><p>读入字符的过程，从输入字符串（源程序文件）中读入一个字符到变量cha中</p></blockquote></li><li><p>getnbc（）</p><blockquote><p>读入非空白字符的函数</p></blockquote></li><li><p>concat（）</p><blockquote><p>连接字符的过程，把cha中的字符连接到token数组的末尾</p></blockquote></li><li><p>letter（）</p><blockquote><p>判断字符是否为字母的函数，若cha中的字符是字母，返回true，否则返回false</p></blockquote></li><li><p>digit（）</p><blockquote><p>判断字符是否为数字的函数，同上</p></blockquote></li><li><p>retract（）</p><blockquote><p>回退字符的过程，将刚读入cha中的字符回退到输入字符串中，并将cha的值置为空白</p><p>实现方法：不需要真正回退，可以设置标记位。</p></blockquote></li><li><p>reserve（）</p><blockquote><p>处理保留字的函数，对存放在token中的字符串差保留字表，查到返回该保留字的类别编码，否则返回0（假定0不是任何单词符号的类别编码）</p></blockquote></li><li><p>bulidlist（）</p><blockquote><p>对token中的字符串查符号表，查到返回位置编号，否则将该串存入符号表，并返回它在符号表中的位置编号</p></blockquote></li><li><p>dtb（）</p><blockquote><p>将token中的数字串（字符串）转换成二进制，存入常数表中，并返回它在符号表中的位置编号。若已经存在，则直接返回它在表中的编号</p></blockquote></li><li><p>return（num，value）</p><blockquote><p>返回二元式函数，num为单词类别编码，value是单词在符号表中的位置编号，或是它在常数表中的位置编号，或是0</p></blockquote></li><li><p>error（）</p><blockquote><p>处理出现词法错误的过程。有一类词法错误可以在词法分析时发现，如出现字母表以外的非法字符。不和规则的常数等。但有一类词法错误例如if写成fi，词法分析会将fi当标识符处理，length中多了个空格，词法分析会将le和ngth当作两个标识符处理，这类错误要推迟到语法分析时才能发现，当作语法错误处理</p></blockquote></li></ol><p>伪代码：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">Word_Struct LexAnalyze()</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">   start:  token:=‘’ ;</span><br><span class="line">              getchar();</span><br><span class="line">              getnb();</span><br><span class="line">              <span class="keyword">case</span> cha <span class="keyword">of</span> </span><br><span class="line">                ‘a’…‘z’:  <span class="keyword">begin</span> </span><br><span class="line">                  <span class="keyword">while</span> letter() <span class="keyword">or</span> digit() <span class="keyword">do</span></span><br><span class="line">                     <span class="keyword">begin</span> concat ();getchar() <span class="keyword">end</span>;</span><br><span class="line">                     retract(); c:= reserve();</span><br><span class="line">                     <span class="keyword">if</span> c = <span class="number">0</span> <span class="keyword">then</span> <span class="keyword">begin</span></span><br><span class="line">                        val:= buildlist(); return($ID,val)    end</span><br><span class="line">                    <span class="keyword">else</span> return(c,<span class="number">0</span>)</span><br><span class="line">                 <span class="keyword">end</span>;</span><br><span class="line">                ‘<span class="number">0</span>’…‘<span class="number">9</span>’:  <span class="keyword">begin</span></span><br><span class="line">                 <span class="keyword">while</span> digit() <span class="keyword">do</span></span><br><span class="line">                   <span class="keyword">begin</span> concat();getchar() <span class="keyword">end</span>;</span><br><span class="line">                 retract(); val:=dtb();</span><br><span class="line">                 return($INT,val)</span><br><span class="line">                 <span class="keyword">end</span>;</span><br><span class="line">                ‘ = ’:   return(<span class="number">$E</span>Q,<span class="number">0</span>);</span><br><span class="line">                ‘ - ’:    return($SUB,0); </span><br><span class="line">                ‘ * ’:   return($MUL,0);</span><br><span class="line">                ‘ ( ’:    return($LPAR,0);</span><br><span class="line">                ‘ ) ’:    return($RPAR,0);</span><br><span class="line">                ‘ ; ’:    return($SEM,0)</span><br><span class="line">                ‘ &lt; ’:   <span class="keyword">begin</span></span><br><span class="line">                  getchar();</span><br><span class="line">                  if cha = ‘=’ then return($LE, 0)</span><br><span class="line">                  <span class="keyword">else</span> </span><br><span class="line">                    if cha = ‘&gt;’ then return($NE, 0);</span><br><span class="line">                  retract();  return($LT,0)</span><br><span class="line">                <span class="keyword">end</span>;</span><br><span class="line">                ‘ &gt; ’:   <span class="keyword">begin</span></span><br><span class="line">                  getchar();</span><br><span class="line">                  if cha= ‘ = ’ then return($GE, 0);</span><br><span class="line">                  retract();</span><br><span class="line">                  return($GT, 0)</span><br><span class="line">                <span class="keyword">end</span>;</span><br><span class="line">                ‘ : ’:    <span class="keyword">begin</span></span><br><span class="line">                  getchar();</span><br><span class="line">                  <span class="keyword">if</span> cha = ‘ = ‘ <span class="keyword">then</span>   </span><br><span class="line">                      return(<span class="number">$A</span>SSIGN,<span class="number">0</span>)</span><br><span class="line">                  <span class="keyword">else</span> error(<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">end</span>;</span><br><span class="line">                other: error(<span class="number">2</span>)</span><br><span class="line">                <span class="keyword">end</span> <span class="keyword">of</span> <span class="keyword">case</span>;</span><br><span class="line"><span class="keyword">End</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>以上代码将词法分析器实现为一个函数LexAnalyze()，函数没执行一次，就会从输入字符串中识别出一个单词符号并按二元式形式返回。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;编译原理第六章-词法分析&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#编译原理第六章-词法分析&quot;&gt;&lt;/a&gt; 编译原理第六章-词法分析&lt;/h1&gt;
&lt;p&gt;词法分析：编译程序对源程序进行分析和目标程序合成，最终生成目标程序&lt;/p&gt;
&lt;p&gt;预处理子程序（预处理器）功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;删除编辑用字符，如制表符、换页符等&lt;/li&gt;
&lt;li&gt;删除注释&lt;/li&gt;
&lt;li&gt;合并多个空白字符为单个空白字符&lt;/li&gt;
&lt;li&gt;组合多个独立文件中的源程序&lt;/li&gt;
&lt;li&gt;展开宏定义&lt;/li&gt;
&lt;li&gt;条件编译的选择等&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="编译原理" scheme="https://wsw8.online/categories/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="课程" scheme="https://wsw8.online/tags/%E8%AF%BE%E7%A8%8B/"/>
    
    <category term="计算机" scheme="https://wsw8.online/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>编译原理第二章</title>
    <link href="https://wsw8.online/archives/1934b292.html"/>
    <id>https://wsw8.online/archives/1934b292.html</id>
    <published>2021-04-14T10:49:14.000Z</published>
    <updated>2021-05-10T08:22:14.202Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据类型的分类"><a class="markdownIt-Anchor" href="#数据类型的分类"></a> 数据类型的分类</h2><h3 id="内部类型"><a class="markdownIt-Anchor" href="#内部类型"></a> 内部类型</h3><blockquote><p>优点：</p><ol><li>基本表示的不可见性</li><li>编译时能检查变量使用的正确性</li><li>编译时可以确定无二义的操作</li><li>精度控制</li></ol></blockquote><span id="more"></span><h3 id="用户定义类型"><a class="markdownIt-Anchor" href="#用户定义类型"></a> 用户定义类型</h3><blockquote><ol><li>有限映像：<br />定义：从定义域类型DT值的有限集合，到值域类型RT值的有限集合的函数（映射）<br />eg：array[1…50] of char 中整数1至50到字符集的有限映像</li><li>序列：<br />定义：任意多个数据项组成，数据项称为序列的成分，且<strong>类型相同</strong></li><li>判定或：<br />定义：可以选择不同成员的构造机制<br />eg：PASCAL的变体记录、C的联合<br />eg：<br />变体记录定义如下：</li></ol><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> dept=(house,sports,drugs,food,liquor);</span><br><span class="line">month=<span class="number">1</span>..<span class="number">12</span>;</span><br><span class="line">item=<span class="keyword">record</span></span><br><span class="line">    price:real;</span><br><span class="line">    <span class="keyword">case</span> available:boolean <span class="keyword">of</span></span><br><span class="line">        true:(amount:integer;  </span><br><span class="line">            where:dept);</span><br><span class="line">        false:(month_expected:month)</span><br><span class="line"> <span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>实现代码如下：</p><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span>  i1,i2:item:</span><br><span class="line">i1.price:=<span class="number">5.24</span>;i1.available:=true;</span><br><span class="line">i1.amount:=<span class="number">29</span>;i1.where:=liquor;</span><br><span class="line">i2.price:=<span class="number">324.99</span>;i2.available:=false;</span><br><span class="line">i2.month_expect:=<span class="number">8</span>;</span><br></pre></td></tr></table></figure><p>则空间分配情况如下：</p><center>i1</center><table><thead><tr><th>变量名</th><th>值</th></tr></thead><tbody><tr><td>price</td><td>5.24</td></tr><tr><td>available</td><td>true</td></tr><tr><td>amount</td><td>29</td></tr><tr><td>where</td><td>liquor</td></tr></tbody></table><center>i2</center><table><thead><tr><th>变量名</th><th>值</th></tr></thead><tbody><tr><td>price</td><td>324.99</td></tr><tr><td>available</td><td>false</td></tr><tr><td>month_expected</td><td>8</td></tr><tr><td></td><td></td></tr></tbody></table><ol start="4"><li>幂集<br />定义：类型T的元素的所有子集的集合，T为基类型</li></ol></blockquote><h2 id="c语言的数据类型"><a class="markdownIt-Anchor" href="#c语言的数据类型"></a> C语言的数据类型</h2><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E4%BA%8C%E7%AB%A0/image-20210414193241257.png" alt="image-20210414193241257" /></p><h3 id="非结构类型"><a class="markdownIt-Anchor" href="#非结构类型"></a> 非结构类型</h3><ol><li><p>内部类型<br />整型：int、short、long、unsigned<br />浮点型：float、double<br />字符型：char（有限字符集的元素）</p></li><li><p>用户定义的非结构类型<br />枚举：enum</p></li></ol><h3 id="结构类型"><a class="markdownIt-Anchor" href="#结构类型"></a> 结构类型</h3><ol><li><p>数组</p></li><li><p>结构struct</p></li><li><p>联合union（C的联合是不安全的）</p></li><li><p>文件FILE</p></li><li><p>指针</p></li><li><p>空类型void</p></li></ol><blockquote><p>不允许定义空类型变量，可以定义空类型指针变量</p></blockquote><h2 id="类型检查"><a class="markdownIt-Anchor" href="#类型检查"></a> 类型检查</h2><p>定义：对数据的操作和对应的类型是否匹配的一致性检查<br />eg：非法运算、赋值运算、形参实参类型是否匹配</p><ol><li>静态检查和动态检查</li></ol><blockquote><p>静态检查使程序更有效<br />动态检查是编程更方便，但是影响了可靠性且降低了执行效率</p></blockquote><h2 id="语言分类"><a class="markdownIt-Anchor" href="#语言分类"></a> 语言分类</h2><blockquote><p>无类型语言：没有数据类型<br />eg：函数式语言（FP）、泛函程序设计语言（FFP）<br />弱类型语言：类型检查全部或部分在运行时完成<br />eg：PASCAL<br />强类型语言：类型检查都在编译时完成<br />eg：C、ADA</p></blockquote><h2 id="实现模型"><a class="markdownIt-Anchor" href="#实现模型"></a> 实现模型</h2><p>在程序中，数据由常量或变量表示<br />在实现模型中，数据由描述符（描述数据对象的属性）和数据对象（存储区及其内容）表示</p><blockquote><ol><li>内部类型和用户定义的非结构类型：描述符一般由类型描述和指针组成<br /><strong>多个变量的描述符形成变量名表</strong><br />eg：</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> numb;</span><br></pre></td></tr></table></figure><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E4%BA%8C%E7%AB%A0/image-20210411152405051.png" alt="image-20210411152405051" /></p><ol start="2"><li>结构类型</li></ol><ul><li>笛卡尔积<br />各成分按顺序存储，每个成分占整数个存储单元<br />描述符包含：类型名、构造符、若干三元式（选择符名、域类型、指针）（每个域对应一个三元式）<br />eg：</li></ul><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> t=recode a:real;</span><br><span class="line">              b:integer;</span><br><span class="line">       <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">var</span> x:t;</span><br></pre></td></tr></table></figure><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E4%BA%8C%E7%AB%A0/image-20210411155756373.png" alt="image-20210411155756373" /></p><ul><li>有限映像<br />为每一成分分配整数个可编址的存储单元<br />描述符包括：类型名、构造符、<strong>定义域的基类型</strong>、下界、上界、成分类型、（每个成分占）单元个数、<strong>首地址</strong><br />eg：</li></ul><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> a=<span class="keyword">array</span>[<span class="number">1</span>..<span class="number">10</span>] <span class="keyword">of</span> real;</span><br></pre></td></tr></table></figure><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E4%BA%8C%E7%AB%A0/image-20210411160449254.png" alt="image-20210411160449254" /></p><ul><li>序列<br />可变长串的表示：静态描述符+动态描述符+堆</li></ul><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E4%BA%8C%E7%AB%A0/image-20210411161113371.png" alt="image-20210411161113371" /></p><ul><li>判定或<br />pascal的变体记录：描述符、数据对象、case表、若干变体描述符</li></ul><figure class="highlight pascal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> v=<span class="keyword">record</span> a:integer;</span><br><span class="line">              <span class="keyword">case</span> b:boolean <span class="keyword">of</span></span><br><span class="line">                   true:(c:integer);</span><br><span class="line">                   false:(d:integer;</span><br><span class="line">                          e:real)</span><br><span class="line">       <span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p><img src="/images/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%AC%E4%BA%8C%E7%AB%A0/image-20210411161638987.png" alt="image-20210411161638987" /></p><ul><li><p>指针</p><p>表示与内部类型相同只是其值为地址</p><p>指针指向的匿名数据对象分配在堆上</p></li><li><p><strong>编译时所有的描述符保存在一张表中以便编译时使用，甚至有些描述符要保存到运行阶段（数组），并且存储在描述符中的属性可能随运行而变化。</strong></p></li></ul></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;数据类型的分类&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数据类型的分类&quot;&gt;&lt;/a&gt; 数据类型的分类&lt;/h2&gt;
&lt;h3 id=&quot;内部类型&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#内部类型&quot;&gt;&lt;/a&gt; 内部类型&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本表示的不可见性&lt;/li&gt;
&lt;li&gt;编译时能检查变量使用的正确性&lt;/li&gt;
&lt;li&gt;编译时可以确定无二义的操作&lt;/li&gt;
&lt;li&gt;精度控制&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="编译原理" scheme="https://wsw8.online/categories/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="课程" scheme="https://wsw8.online/tags/%E8%AF%BE%E7%A8%8B/"/>
    
    <category term="计算机" scheme="https://wsw8.online/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>编译原理第一章</title>
    <link href="https://wsw8.online/archives/29225e4a.html"/>
    <id>https://wsw8.online/archives/29225e4a.html</id>
    <published>2021-04-14T10:48:04.000Z</published>
    <updated>2021-05-10T08:15:46.308Z</updated>
    
    <content type="html"><![CDATA[<h2 id="语言的本质"><a class="markdownIt-Anchor" href="#语言的本质"></a> 语言的本质</h2><p>一组规则的组合</p><ol><li>字母表的定义</li><li>词法规则</li><li>语法规则</li><li>语义规则</li><li>语用规则</li></ol>   <span id="more"></span><h2 id="与编译有关的三种语言和三种程序"><a class="markdownIt-Anchor" href="#与编译有关的三种语言和三种程序"></a> 与编译有关的三种语言和三种程序</h2><table><thead><tr><th>源语言</th><th>工具语言</th><th>目标语言</th></tr></thead><tbody><tr><td>源程序</td><td>编译程序</td><td>目标程序</td></tr></tbody></table><h2 id="程序设计语言的分类"><a class="markdownIt-Anchor" href="#程序设计语言的分类"></a> 程序设计语言的分类</h2><table><thead><tr><th>强制式语言</th><th>函数式语言</th><th>逻辑式语言</th><th>对象式语言</th></tr></thead><tbody><tr><td>冯·诺依曼模型</td><td>数学函数（函数运算）</td><td>数理逻辑、谓词演算</td><td>抽象数据类型</td></tr></tbody></table><h2 id="冯诺依曼体系结构"><a class="markdownIt-Anchor" href="#冯诺依曼体系结构"></a> 冯·诺依曼体系结构</h2><ol><li>构成基础<br />存储器、控制器、处理器、ip</li><li>特点<ul><li>数据、指令以二进制形式存储</li><li>存储程序的工作方式</li><li>程序顺序执行，可强制修改执行顺序</li><li>存储器内容可以被修改</li></ul></li></ol><h2 id="变量的4个属性"><a class="markdownIt-Anchor" href="#变量的4个属性"></a> 变量的4个属性</h2><ol><li><p>作用域</p><blockquote><ul><li>静态绑定：依据变量定义的位置</li><li>动态绑定：依据过程的调用关系</li></ul></blockquote><ul><li>全局变量</li><li>局部变量</li><li>非局部变量</li></ul></li><li><p>生存期</p><blockquote><ul><li>全局变量静态分配</li><li>局部变量运行前静态分配，运行时动态分配</li><li>非局部变量可静态分配可动态分配</li><li>匿名变量是通过指针访问，是动态分配</li></ul></blockquote></li><li><p>值</p><blockquote><ul><li>二进制编码</li><li>按类型解释</li><li>变量与值的绑定是动态的</li><li>常量的值不能修改</li><li>数据对象表示存储区和它保存的值</li></ul></blockquote></li><li><p>类型</p><blockquote><p>静态绑定语言是面向编译的语言<br />动态绑定语言是面向解释的语言</p></blockquote></li></ol><h2 id="虚拟机"><a class="markdownIt-Anchor" href="#虚拟机"></a> 虚拟机</h2><p>M1是实际的机器<br />机器语言是汇编语言的M2=M1+汇编程序<br />机器语言是高级语言的M3=M2+编译程序</p><h2 id="程序单元"><a class="markdownIt-Anchor" href="#程序单元"></a> 程序单元</h2><ol><li><p>定义：程序执行过程中被独立调用单元，包括子程序、分程序、过程等</p></li><li><p>表示：</p><blockquote><ul><li><p>编译时：单元的源程序</p></li><li><p>运行时：一个代码段和一个活动记录组成，称为单元实例</p></li><li><blockquote><p>活动记录：执行单元需要的信息和局部变量等数据存储区</p></blockquote></li></ul></blockquote></li><li><p>实例：</p><blockquote><ul><li>非局部变量：一个程序单元可以引用未被本单元说明而被其它单元说明的变量</li><li>全局变量：一个程序中各个程序单元都可以引用的变量</li></ul></blockquote></li></ol><h2 id="c程序运行时的存储空间"><a class="markdownIt-Anchor" href="#c程序运行时的存储空间"></a> C程序运行时的存储空间</h2><ol><li><p>程序代码区：存储程序代码（编译后形成的二进制机器指令序列）</p></li><li><p>数据静态存储区：存储程序的<strong>常量数据、全局数据、static数据</strong></p></li><li><p>数据动态存储区：</p><blockquote><p>栈：存储返回地址、CPU现场、临时变量、<strong>形参、局部变量</strong><br />堆：存储动态内存申请数据</p></blockquote></li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;语言的本质&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#语言的本质&quot;&gt;&lt;/a&gt; 语言的本质&lt;/h2&gt;
&lt;p&gt;一组规则的组合&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;字母表的定义&lt;/li&gt;
&lt;li&gt;词法规则&lt;/li&gt;
&lt;li&gt;语法规则&lt;/li&gt;
&lt;li&gt;语义规则&lt;/li&gt;
&lt;li&gt;语用规则&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="编译原理" scheme="https://wsw8.online/categories/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="课程" scheme="https://wsw8.online/tags/%E8%AF%BE%E7%A8%8B/"/>
    
    <category term="计算机" scheme="https://wsw8.online/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="编译原理" scheme="https://wsw8.online/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
</feed>
